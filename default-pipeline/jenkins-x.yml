pipelineConfig:
  pipelines:

    overrides:
      # Add an additional step to the e2e-tests stage of the release pipeline.
      - pipeline: release
        stage: e2e-tests
        step:
          name: do-release
          sh: bash ./run-release.sh
        type: after
      # Override the image and container options for the pullRequest pipeline.
      - pipeline: pullRequest
        agent:
          image:
            gcr.io/kaniko-project/executor:someOtherTag
        containerOptions:
          resources:
            limits:
              cpu: 8
              memory: 16384Mi

    # Default pipeline which will be used for both pullRequest and release pipelines.
    default:
      agent:
        image: gcr.io/kaniko-project/executor:v0.10.0
      options:
        containerOptions:
          resources:
            limits:
              cpu: 4
              memory: 6144Mi
            requests:
              cpu: 1
              memory: 2048Mi
          env:
            - name: CODECOV_TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: codecov-token
      stages:
        - name: build
          environment:
            - name: GOPROXY
              value: http://jenkins-x-athens-proxy:80
            - name: PARALLEL_BUILDS
              value: "2"

          steps:
            - image: jenkinsxio/jx:1.3.963
              command: jx step credential -s kaniko-secret -k kaniko-secret -f /builder/home/kaniko-secret.json

            - name: build-binary
              image: docker.io/golang:1.11.5
              command: make
              args:
                - linux

            - name: build-and-push-image
              command: /kaniko/executor
              args: ['--dockerfile=/workspace/source/Dockerfile','--destination=gcr.io/jenkinsxio/jx:covered-${inputs.params.version}','--context=/workspace/source','--cache-repo=jenkins-x-docker-registry.jx.svc.cluster.local:5000/','--cache=true','--cache-dir=/workspace','--skip-tls-verify-registry=jenkins-x-docker-registry.jx.svc.cluster.local:5000']

            - name: build-and-push-nodejs
              command: /kaniko/executor
              args: ['--dockerfile=/workspace/source/Dockerfile.builder-nodejs','--destination=gcr.io/jenkinsxio/builder-nodejs:covered-${inputs.params.version}','--context=/workspace/source','--cache-repo=jenkins-x-docker-registry.jx.svc.cluster.local:5000/','--cache=true','--cache-dir=/workspace','--skip-tls-verify-registry=jenkins-x-docker-registry.jx.svc.cluster.local:5000']

            - name: build-and-push-maven
              command: /kaniko/executor
              args: ['--dockerfile=/workspace/source/Dockerfile.builder-maven','--destination=gcr.io/jenkinsxio/builder-maven:covered-${inputs.params.version}','--context=/workspace/source','--cache-repo=jenkins-x-docker-registry.jx.svc.cluster.local:5000/','--cache=true','--cache-dir=/workspace','--skip-tls-verify-registry=jenkins-x-docker-registry.jx.svc.cluster.local:5000']

            - name: build-and-push-go
              command: /kaniko/executor
              args: ['--dockerfile=/workspace/source/Dockerfile.builder-go','--destination=gcr.io/jenkinsxio/builder-go:covered-${inputs.params.version}','--context=/workspace/source','--cache-repo=jenkins-x-docker-registry.jx.svc.cluster.local:5000/','--cache=true','--cache-dir=/workspace','--skip-tls-verify-registry=jenkins-x-docker-registry.jx.svc.cluster.local:5000']

        - name: e2e-tests
          environment:
            - name: GOPROXY
              value: http://jenkins-x-athens-proxy:80
            - name: PARALLEL_BUILDS
              value: "2"

          steps:
            - name: tekton-e2e-tests
              image: gcr.io/jenkinsxio/builder-go:covered-${inputs.params.version}
              command: ./jx/bdd/tekton/ci.sh

            - name: stash-test-results
              image: gcr.io/jenkinsxio/jx:covered-${inputs.params.version}
              command: jx
              # TODO force it to use the gs bucket until we sort out why the team setting gets wiped
              args: ['step', 'stash', '-c', 'tekton-e2e-tests', '-p', 'build/reports/junit.xml', '--bucket-url', 'gs://jx-prod-logs']
